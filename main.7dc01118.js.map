{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","messageToPrint","document","createElement","className","innerHTML","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCE,EACYF,UAAAA,OAAAA,EACCD,8BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GAF9C,UAQN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAY,UAC3BH,EAAeI,UAAYL,EAC3BE,SAASI,KAAKC,YAAYN,IAG5BO,OAAOC,QAAU,CACfnB,QAAAA,EACAS,aAAAA","file":"main.7dc01118.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the\n        element: ${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messageToPrint = document.createElement('div');\n\n  messageToPrint.className = 'message';\n  messageToPrint.innerHTML = message;\n  document.body.appendChild(messageToPrint);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}